imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: doctrine_extensions.yml }

framework:
    #esi:             ~
    #translator:      { fallback: %locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: false
    validation: { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:
        handler_id: session.handler.pdo
    fragments:       ~
    http_method_override: true
    translator:      { fallback: "%locale%" }
    serializer:
        enable_annotations: true
        cache: serializer.mapping.cache.apc

services:
    session.handler.pdo:
        class:     Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler
        public:    false
        arguments:
            - "mysql:host=%database_host%;port=%database_port%;dbname=%database_name%"
            - { db_username: %database_user%, db_password: %database_password% }

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

fos_user:
    db-driver: orm
    firewall-name: main
    user-class: User\UserBundle\Entity\User

    profile:
        form:
            type: user_user_profile
            name: user_profile
            validation_groups: [Default]
    registration:
        confirmation:
            enabled: true
            template: UserBundle:User:en.registration.email.html.twig
            from_email:
                address:  thebraineetbros@braineet.com
                sender_name: Braineet
        form:
            type: user_user_registration
            name: user_registration
            validation_groups: [Default]
    service:
            mailer: user.mailer.braineet
    change_password:
        form:
            name:               user_change_password
    resetting:
        token_ttl: 86400
        email:
            template: UserBundle:User:en.resetting.email.html.twig
            from_email:
                address:  thebraineetbros@braineet.com
                sender_name: Braineet
        form:
            name: user_resetting


# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8
        
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: %kernel.root_dir%/data/data.db3
        # path:     %database_path%
    orm:
        auto_generate_proxy_classes: %kernel.debug%
        default_entity_manager: default
        entity_managers:
            default:
                auto_mapping: true
                metadata_cache_driver: apc
                result_cache_driver: redis
                query_cache_driver: apc
                connection: default
                mappings:
                    translatable:
                        type: annotation
                        alias: Gedmo
                        prefix: Gedmo\Translatable\Entity
                        # make sure vendor library location is correct
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                dql:
                    numeric_functions:
                        rand: Braineet\DataBundle\DQL\RandFunction
                    string_functions:
                        IF: Braineet\DataBundle\DQL\IfFunction
# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    port:      %mailer_port%
    encryption: tls
    spool:     { type: memory }
    logging:   "%kernel.debug%"

sensio_framework_extra:
    view:
        annotations: false

knp_gaufrette:
    stream_wrapper:
        filesystems:
            photo_storage: photo_storage
    adapters:
        photo_storage:
            aws_s3:
                service_id: 'storage.aws_s3.client'
                bucket_name:  %amazon_s3_bucket_name%
    filesystems:
        photo_storage:
            adapter:    photo_storage
            alias:      photo_storage_filesystem
storage:
    amazon_s3:
        aws_key:        %amazon_aws_key%
        aws_secret_key: %amazon_aws_secret_key%
        aws_region:     %amazon_aws_region%
        base_url:       %amazon_s3_base_url%
        bucket:         %amazon_s3_bucket_name%

fos_rest:
    param_fetcher_listener: true
    body_listener: true
    format_listener: true
    view:
        view_response_listener: 'force'
        formats:
            xml: true
            json : true
        templating_formats:
            html: true
        force_redirects:
            html: true
        failed_validation: HTTP_BAD_REQUEST
        default_engine: twig
    routing_loader:
        default_format: json

fos_oauth_server:
    db_driver: orm       # Driver availables: orm, mongodb, or propel
    client_class:        OAuth\ServerBundle\Entity\Client
    access_token_class:  OAuth\ServerBundle\Entity\AccessToken
    refresh_token_class: OAuth\ServerBundle\Entity\RefreshToken
    auth_code_class:     OAuth\ServerBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_manager
        options:
            supported_scopes: braineet api connect post
            refresh_token_lifetime: 31622400
            #access_token_lifetime: 30

jms_serializer:
    metadata:
        directories:
            FOSUB:
                namespace_prefix: "FOS\\UserBundle"
                path: "%kernel.root_dir%/serializer/FOSUserBundle"

liip_imagine:
    cache: 'amazon_s3'
    filter_sets:
        original:
            data_loader: stream.photo
            animated: true
            filters:
                auto_rotate: ~
                background: { color: '#fff' }
                interlace:
                    mode: line
        thumb_1000x1000:
            data_loader: stream.photo
            animated: true
            filters:
                auto_rotate: ~
                thumbnail: { size: [1000, 1000], mode: inset }
        thumb_500x500:
            data_loader: stream.photo
            animated: true
            filters:
                auto_rotate: ~
                thumbnail: { size: [500, 500], mode: inset }
        thumb_300x300:
            data_loader: stream.photo
            animated: true
            filters:
                auto_rotate: ~
                thumbnail: { size: [300, 300], mode: outbound, color: '#fff', allow_upscale: true }
                interlace:
                    mode: line
        thumb_150x150:
            data_loader: stream.photo
            animated: true
            filters:
                auto_rotate: ~
                thumbnail: { size: [150, 150], mode: outbound, color: '#fff', allow_upscale: true }
                interlace:
                    mode: line
        thumb_90x90:
            data_loader: stream.photo
            filters:
                auto_rotate: ~
                thumbnail: { size: [90, 90], mode: outbound, color: '#fff', allow_upscale: true}
                interlace:
                    mode: line
        thumb_cover_1600:
            data_loader: stream.photo
            animated: true
            filters:
                auto_rotate: ~
                thumbnail: { size: [1600, 800], mode: outbound, allow_upscale: true}

        thumb_cover_800:
            data_loader: stream.photo
            animated: true
            filters:
                auto_rotate: ~
                thumbnail: { size: [800, 400], mode: outbound, allow_upscale: true}

        thumb_original:
            data_loader: stream.photo
            animated: true
            filters:
                auto_rotate: ~
sonata_block:
    default_contexts: [cms]
    blocks:
        # Enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts:   [admin]
sonata_admin:
    title: Braineet

a2lix_translation_form:
    locales: [fr, en]       # [1]
    required_locales: [fr, en]      # [2]
    manager_registry: doctrine      # [3]
    templating: "A2lixTranslationFormBundle::default.html.twig"      # [4]

nelmio_api_doc:
    name: 'API Braineet'
    sandbox:
        enabled:              true
        endpoint:             http://local.braineet.com
        authentication:
            name: Authorization      # access token name or query parameter name or header name
            delivery: http          # `query`, `http`, and `header` are supported
            type:     bearer
    swagger:
        api_base_path:        /api
        swagger_version:      '1.2'
        api_version:          '1.0'
        info:
            title:                Braineet
            description:          'My awesome Symfony2 app!'
            TermsOfServiceUrl:    null
            contact:              support@braineet.com
            license:              null
            licenseUrl:           null
nelmio_cors:
    paths:
        '^/':
            allow_origin: ['*']
            allow_headers: ['*']
            allow_methods: ['POST', 'PATCH', 'GET', 'DELETE']
            max_age: 3600
            allow_credentials: true

knp_snappy:
    pdf:
        enabled:    true
        binary:     /usr/bin/wkhtmltopdf
        #binary: "\"C:\\Program Files\\wkhtmltopdf\\bin\\wkhtmltopdf.exe\""
        options: []
    image:
        enabled:    true
        binary:     /usr/bin/wkhtmltoimage
        #binary:  "\"C:\\Program Files\\wkhtmltopdf\\bin\\wkhtmltoimage.exe\""
        options:
            quality: 100

fos_http_cache:
    cache_control:
        defaults:
            overwrite: true
        rules:
            -
                match:
                    path: ^/
                    methods: [GET]
                headers:
                    overwrite: false
                    cache_control: { public: true, max_age: 3600, s_maxage: 3600 }
                    vary: [Accept-Encoding, Accept-Language, Authorization]
            -
                match:
                    path: ^/
                headers:
                    overwrite: false
                    cache_control: { public: false, max_age: 0, s_maxage: 0 }
                    etag: true
snc_redis:
    clients:
        default:
            type: predis
            alias: default
            dsn:
                - redis://cyjk]A}Jb_N2k@10.0.2.5?alias=master
                - redis://cyjk]A}Jb_N2k@10.0.2.7
                - redis://cyjk]A}Jb_N2k@10.0.2.8
                - redis://cyjk]A}Jb_N2k@10.0.2.9
                - redis://cyjk]A}Jb_N2k@10.0.2.10
            options:
                replication: true
    doctrine:
        result_cache:
            client: default
            namespace: "%kernel.root_dir%"
            entity_manager: [default]